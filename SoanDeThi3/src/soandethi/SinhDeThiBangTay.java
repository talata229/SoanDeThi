/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package soandethi;

import docghidulieu.PhuongThucChung;
import docghidulieu.DocGhiCauHoi;
import docghidulieu.DocGhiDeThi;
import docghidulieu.DocGhiDuLieu;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Random;
import java.util.Vector;
import javax.swing.DefaultListModel;
import model.CauHoi;
import model.DapAn;
import model.DeThi;
import model.MonHoc;
import model.TracNghiem;
import model.TuLuan;

/**
 *
 * @author Quan
 */
public class SinhDeThiBangTay extends javax.swing.JFrame {

    ArrayList<MonHoc> dsMonHoc;
    MonHoc mh;
    DocGhiDuLieu docGhiDuLieu;
    DocGhiCauHoi docGhiCauHoi;

    DeThi dethi;

    static final String PATH = "src\\data\\dsmonhoc.txt";
    public String pathTuLuan;
    public String pathTracNghiem;
    public String pathDeThi;

    DefaultListModel<String> dlCauHoiMonHoc;

    ArrayList<TuLuan> dsCauHoiTuLuanMonHoc;
    ArrayList<TracNghiem> dsCauHoiTracNghiemMonHoc;
    ArrayList<CauHoi> dsCauHoiTongHop;

    ArrayList<CauHoi> dsCauHoiDeThi;
    DefaultListModel<String> dlCauHoiDeThi;
    DefaultListModel<String> dlSearched;
    
    int soCauTracNghiem;

    ArrayList<Integer> dsCauhoiTrongDe;
    int soCauTracNghiemDe;
    int soCauTuLuanDe;
    
    ArrayList<DapAn> dsDapAn;

    //String deThi="";
    /**
     * Creates new form ChonCauHoiDuaVaoDeThi
     */
    public SinhDeThiBangTay() {
        initComponents();
//        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        dsMonHoc = new ArrayList<>();
        docGhiDuLieu = new DocGhiDuLieu();
        dsMonHoc = docGhiDuLieu.docFile(PATH);
        mh = new MonHoc();
        mh = dsMonHoc.get(ChonMonHoc.viTriMonHocDuocChon);
        themMonHocDuocChon();
        soCauTracNghiem = 0;
        
        pathTuLuan = "src\\data\\" + mh.getTenMonHoc() + "\\TuLuan.txt";
        pathTracNghiem = "src\\data\\" + mh.getTenMonHoc() + "\\TracNghiem.txt";
        docGhiCauHoi = new DocGhiCauHoi();
        dsCauHoiTuLuanMonHoc = new ArrayList<>();
        dsCauHoiTracNghiemMonHoc = new ArrayList<>();
        dsCauHoiTongHop = new ArrayList<>();

        dsCauHoiTuLuanMonHoc = docGhiCauHoi.docCauHoiTuLuan(pathTuLuan);
        dsCauHoiTracNghiemMonHoc = docGhiCauHoi.docCauHoiTracNghiem(pathTracNghiem);

        dlCauHoiMonHoc = new DefaultListModel<>();
        listCauHoiMonHoc.setModel(dlCauHoiMonHoc);
        hienThiListCauHoi();
        
        dlSearched = new DefaultListModel<>();

        dsCauhoiTrongDe = new ArrayList<>();
        soCauTracNghiemDe = 0;
        soCauTuLuanDe = 0;
        
        dsCauHoiDeThi = new ArrayList<>();
        dlCauHoiDeThi = new DefaultListModel<>();

        rdHocKy1.setSelected(true);
        
    }

    public void themMonHocDuocChon() {
        txtTenMonHoc.setText(mh.getTenMonHoc());
    }

    public void hienThiListCauHoi() {
        for (TracNghiem tn : dsCauHoiTracNghiemMonHoc) {
            dsCauHoiTongHop.add(tn);
        }
        soCauTracNghiem = dsCauHoiTongHop.size();
        for (TuLuan tl : dsCauHoiTuLuanMonHoc) {
            dsCauHoiTongHop.add(tl);
        }
        int i = 0;
        for (CauHoi ch : dsCauHoiTongHop) {
            i++;
            dlCauHoiMonHoc.addElement(i+". "+ch.getNoiDungCauHoi());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jScrollPane6 = new javax.swing.JScrollPane();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        btnChonNgauNhien = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        rdTracNghiem = new javax.swing.JRadioButton();
        rdTuLuan = new javax.swing.JRadioButton();
        rdTatCa = new javax.swing.JRadioButton();
        jLabel14 = new javax.swing.JLabel();
        txtTenMonHoc = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        listCauHoiMonHoc = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtChiTietCauHoi = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        txtDiem = new javax.swing.JTextField();
        btnThemCauHoi = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtChiTietDeThi = new javax.swing.JTextArea();
        btnXaoTronCauHoi = new javax.swing.JButton();
        btnXuatRaFile = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        btnLenTren = new javax.swing.JButton();
        btnXuongDuoi = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtPhut = new javax.swing.JTextField();
        txtNamHoc = new javax.swing.JTextField();
        rdHocKyHe = new javax.swing.JRadioButton();
        rdHocKy2 = new javax.swing.JRadioButton();
        rdHocKy1 = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listCauHoiDeThi = new javax.swing.JList<>();
        btnLuuDeThi = new javax.swing.JButton();
        btnXoaDeThi = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();

        jScrollPane8.setViewportView(jTree1);

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setToolTipText("");

        btnChonNgauNhien.setBackground(new java.awt.Color(204, 255, 204));
        btnChonNgauNhien.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnChonNgauNhien.setText("Chọn ngẫu nhiên");
        btnChonNgauNhien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonNgauNhienActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Dạng câu hỏi:");

        buttonGroup1.add(rdTracNghiem);
        rdTracNghiem.setText("Trắc nghiệm");
        rdTracNghiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdTracNghiemMouseClicked(evt);
            }
        });

        buttonGroup1.add(rdTuLuan);
        rdTuLuan.setText("Tự luận");
        rdTuLuan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdTuLuanMouseClicked(evt);
            }
        });

        buttonGroup1.add(rdTatCa);
        rdTatCa.setSelected(true);
        rdTatCa.setText("Tất cả");
        rdTatCa.setToolTipText("");
        rdTatCa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdTatCaMouseClicked(evt);
            }
        });
        rdTatCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdTatCaActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setText("Danh sách câu hỏi ");

        txtTenMonHoc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtTenMonHoc.setForeground(java.awt.Color.red);

        jScrollPane7.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane7.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        listCauHoiMonHoc.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listCauHoiMonHoc.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        listCauHoiMonHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listCauHoiMonHocMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(listCauHoiMonHoc);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnChonNgauNhien))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rdTatCa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rdTracNghiem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rdTuLuan))
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTenMonHoc)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtTenMonHoc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(btnChonNgauNhien)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdTatCa)
                    .addComponent(rdTracNghiem)
                    .addComponent(rdTuLuan))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        txtChiTietCauHoi.setColumns(20);
        txtChiTietCauHoi.setRows(5);
        jScrollPane3.setViewportView(txtChiTietCauHoi);

        jScrollPane2.setViewportView(jScrollPane3);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Điểm cho câu hỏi:");

        txtDiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDiemKeyReleased(evt);
            }
        });

        btnThemCauHoi.setBackground(new java.awt.Color(255, 204, 204));
        btnThemCauHoi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnThemCauHoi.setText("Thêm vào đề thi");
        btnThemCauHoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemCauHoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnThemCauHoi, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThemCauHoi))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        txtChiTietDeThi.setColumns(20);
        txtChiTietDeThi.setRows(5);
        jScrollPane5.setViewportView(txtChiTietDeThi);

        btnXaoTronCauHoi.setBackground(new java.awt.Color(204, 204, 255));
        btnXaoTronCauHoi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnXaoTronCauHoi.setText("Xáo trộn câu hỏi");
        btnXaoTronCauHoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXaoTronCauHoiActionPerformed(evt);
            }
        });

        btnXuatRaFile.setBackground(new java.awt.Color(204, 204, 255));
        btnXuatRaFile.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnXuatRaFile.setText("Xuất ra file");
        btnXuatRaFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatRaFileActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 204, 204));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Xáo trộn đáp án");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(btnXaoTronCauHoi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXuatRaFile)))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnXaoTronCauHoi, btnXuatRaFile});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXaoTronCauHoi)
                    .addComponent(btnXuatRaFile)
                    .addComponent(jButton2))
                .addGap(14, 14, 14))
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Danh sách các câu trong đề ");

        btnLenTren.setText("▲");
        btnLenTren.setToolTipText("");
        btnLenTren.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLenTrenActionPerformed(evt);
            }
        });

        btnXuongDuoi.setText("▼");
        btnXuongDuoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuongDuoiActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 51));
        jLabel5.setText("<HTML><U>Xóa câu hỏi ra khỏi đề thi</U></HTML>");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Thông tin về đề thi:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Thời gian");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Năm học");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Học kỳ");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("phút");

        txtPhut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPhutKeyReleased(evt);
            }
        });

        txtNamHoc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNamHocKeyReleased(evt);
            }
        });

        buttonGroup2.add(rdHocKyHe);
        rdHocKyHe.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rdHocKyHe.setText("Kỳ hè");
        rdHocKyHe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdHocKyHeMouseClicked(evt);
            }
        });

        buttonGroup2.add(rdHocKy2);
        rdHocKy2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rdHocKy2.setText("2");
        rdHocKy2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdHocKy2MouseClicked(evt);
            }
        });

        buttonGroup2.add(rdHocKy1);
        rdHocKy1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rdHocKy1.setText("1");
        rdHocKy1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdHocKy1MouseClicked(evt);
            }
        });

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        listCauHoiDeThi.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(listCauHoiDeThi);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rdHocKy1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdHocKy2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdHocKyHe))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addGap(203, 274, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtPhut, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                            .addComponent(txtNamHoc))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnLenTren, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnXuongDuoi, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel10)
                            .addComponent(txtPhut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtNamHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(rdHocKyHe)
                            .addComponent(rdHocKy2)
                            .addComponent(rdHocKy1)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(btnLenTren, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnXuongDuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        btnLuuDeThi.setBackground(new java.awt.Color(102, 255, 102));
        btnLuuDeThi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnLuuDeThi.setForeground(new java.awt.Color(240, 240, 240));
        btnLuuDeThi.setText("Lưu đề thi");
        btnLuuDeThi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuDeThiActionPerformed(evt);
            }
        });

        btnXoaDeThi.setBackground(new java.awt.Color(255, 0, 51));
        btnXoaDeThi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnXoaDeThi.setForeground(new java.awt.Color(240, 240, 240));
        btnXoaDeThi.setText("Xóa đề thi");
        btnXoaDeThi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaDeThiActionPerformed(evt);
            }
        });

        btnHome.setBackground(new java.awt.Color(255, 153, 0));
        btnHome.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnLuuDeThi, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnXoaDeThi, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(btnHome)
                        .addGap(13, 13, 13))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnHome, btnLuuDeThi, btnXoaDeThi});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLuuDeThi)
                    .addComponent(btnXoaDeThi)
                    .addComponent(btnHome))
                .addGap(0, 17, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void rdTracNghiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdTracNghiemMouseClicked
        // TODO add your handling code here:
        dlCauHoiMonHoc.removeAllElements();
        for (int i = 0; i<soCauTracNghiem; i++) {
            TracNghiem tn = (TracNghiem) dsCauHoiTongHop.get(i);
            dlCauHoiMonHoc.addElement((i+1)+". "+tn.getNoiDungCauHoi());
        }

    }//GEN-LAST:event_rdTracNghiemMouseClicked

    private void rdTuLuanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdTuLuanMouseClicked
        // TODO add your handling code here:
        System.out.println(soCauTracNghiem);
        dlCauHoiMonHoc.removeAllElements();
        for (int i = soCauTracNghiem; i<dsCauHoiTongHop.size(); i++) {
            TuLuan tl = (TuLuan) dsCauHoiTongHop.get(i);
            dlCauHoiMonHoc.addElement((i-soCauTracNghiem+1)+". "+tl.getNoiDungCauHoi());
        }

    }//GEN-LAST:event_rdTuLuanMouseClicked

    private void rdTatCaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdTatCaMouseClicked
        // TODO add your handling code here:
        int i =1;
        dlCauHoiMonHoc.removeAllElements();        
        for (CauHoi ch : dsCauHoiTongHop) {
            dlCauHoiMonHoc.addElement(i+". "+ch.getNoiDungCauHoi());
            i++;
        }
    }//GEN-LAST:event_rdTatCaMouseClicked

    private void listCauHoiMonHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listCauHoiMonHocMouseClicked
        // TODO add your handling code here:
        setTxtCauHoiMonHoc();
    }//GEN-LAST:event_listCauHoiMonHocMouseClicked

    private void btnThemCauHoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemCauHoiActionPerformed

        int i = listCauHoiMonHoc.getSelectedIndex();
        if (i == -1) {
            PhuongThucChung.showMessages("Hãy chọn một câu hỏi");
        }else{
            String diem = txtDiem.getText();
            if ((!txtDiem.getText().isEmpty()) && PhuongThucChung.kiemTraSoThuc(diem)
                    && PhuongThucChung.kiemTraSoNguyen(txtPhut.getText().toString())
                    && !txtNamHoc.getText().toString().isEmpty()) {
                CauHoi ch;                
                if (rdTracNghiem.isSelected()) {
                    if(dsCauhoiTrongDe.contains(i)){
                        PhuongThucChung.showMessages("Câu hỏi đã có trong đề, vui lòng chọn câu khác");
                        return;
                    }
                    ch = dsCauHoiTongHop.get(i);
                    dsCauhoiTrongDe.add(i);
                    soCauTracNghiemDe++;
                    ch.setIsTracNghiem(true);
                    
                } else if (rdTuLuan.isSelected()) {
                    if(dsCauhoiTrongDe.contains(i+soCauTracNghiem)){
                        PhuongThucChung.showMessages("Câu hỏi đã có trong đề, vui lòng chọn câu khác");
                        return;
                    }
                    ch = dsCauHoiTongHop.get(i+soCauTracNghiem);
                    dsCauhoiTrongDe.add(i+soCauTracNghiem);
                    soCauTuLuanDe++;
                    ch.setIsTracNghiem(false);
                } else {
                    if(dsCauhoiTrongDe.contains(i)){
                        PhuongThucChung.showMessages("Câu hỏi đã có trong đề, vui lòng chọn câu khác");
                        return;
                    }
                    ch = dsCauHoiTongHop.get(i);
                    if (i < soCauTracNghiem) {
                        ch.setIsTracNghiem(true);
                        soCauTracNghiemDe++;
                    } else {
                        soCauTuLuanDe++;
                        ch.setIsTracNghiem(false);
                    }
                    dsCauhoiTrongDe.add(i);
                }
                ch.setDiem(Double.parseDouble(txtDiem.getText()));

                dsCauHoiDeThi.add(ch);
                dlCauHoiDeThi.addElement((dlCauHoiDeThi.size()+1)+". "+ch.getNoiDungCauHoi().toString());
                listCauHoiDeThi.setModel(dlCauHoiDeThi);
                setDeThi();
            } else {
                PhuongThucChung.showMessages("Bạn đã nhập sai hoặc thiếu thông tin, vui lòng nhập lại!");
                txtDiem.requestFocus();
            }
        }
    }//GEN-LAST:event_btnThemCauHoiActionPerformed

    private void rdTatCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdTatCaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdTatCaActionPerformed

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        int i = listCauHoiDeThi.getSelectedIndex();
        if (i == -1) {
            PhuongThucChung.showMessages("Vui lòng chọn câu hỏi để thao tác");
        } else {
            if (PhuongThucChung.yesNoOption("Bạn muốn xóa " + listCauHoiDeThi.getSelectedValue().toString() + "?")) {
                if(dsCauHoiDeThi.get(i) instanceof TracNghiem){
                    soCauTracNghiemDe --;
                }else{
                    soCauTuLuanDe --;
                }
                dsCauHoiDeThi.remove(i);
                dlCauHoiDeThi.remove(i);
                for(int j = 0; j<dsCauHoiDeThi.size(); j++){
                    dlCauHoiDeThi.set(j, (j+1)+". "+dsCauHoiDeThi.get(j).getNoiDungCauHoi());
                }
                listCauHoiDeThi.setModel(dlCauHoiDeThi);                
                setDeThi();
                dsCauhoiTrongDe.remove(i);
                
            }
        }
    }//GEN-LAST:event_jLabel5MouseClicked

    private void btnLuuDeThiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuDeThiActionPerformed
        int i = dsCauHoiDeThi.size();
        String tg = txtPhut.getText();
        String namHoc = txtNamHoc.getText();
        if (i == 0) {
            PhuongThucChung.showMessages("Bạn cần chọn câu hỏi đưa vào đề thi");
        } else if (txtPhut.getText().isEmpty() && !PhuongThucChung.kiemTraSoNguyen(tg)) {
            PhuongThucChung.showMessages("Thời gian không hợp lệ");
        } else if (txtNamHoc.getText().isEmpty()) {
            PhuongThucChung.showMessages("Hãy nhập năm học");
        } else {
            LuuDeThi ldt = new LuuDeThi();
            LuuDeThi.btnOk.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent ae) {
                    String tenDe = LuuDeThi.txtTen.getText();
                    if(tenDe.isEmpty()){
                        PhuongThucChung.showMessages("Tên đề không được để trống");
                        LuuDeThi.txtTen.requestFocus();
                        return;
                    }
                    
                    pathDeThi = "src\\data\\" + mh.getTenMonHoc()+"\\"+tenDe;
                    System.out.println(pathDeThi);
                    DocGhiDeThi docGhiDeThi = new DocGhiDeThi();
                    String ky = rdHocKy1.isSelected() ? "1" : (rdHocKy2.isSelected() ? "2" : "Hè");
                    docGhiDeThi.luuDeThi(dsCauHoiDeThi, pathDeThi, txtTenMonHoc.getText(), ky, txtNamHoc.getText(), txtPhut.getText());
                    ldt.dispose();
                    PhuongThucChung.showMessages("Đã Lưu đề thi "+LuuDeThi.txtTen.getText());

                }
            });
            LuuDeThi.btnHuy.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent ae) {
                    ldt.dispose();
                    PhuongThucChung.showMessages("Bạn vừa hủy lưu đề thi");
                }
            });
        }
    }//GEN-LAST:event_btnLuuDeThiActionPerformed

    private void btnChonNgauNhienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonNgauNhienActionPerformed
        if(dsCauhoiTrongDe.size() == dsCauHoiTongHop.size()){
            PhuongThucChung.showMessages("Tất cả các câu hỏi đã được đưa vào đề thi");
            return;
        }
        Random rd = new Random();
        int random;
        if (rdTracNghiem.isSelected()) {            
            if(soCauTracNghiemDe>=soCauTracNghiem){
                PhuongThucChung.showMessages("Tất cả câu trắc nghiệm đã ở trong đề");
                return;
            }
            do{                
                random = rd.nextInt(soCauTracNghiem);
            }while(dsCauhoiTrongDe.contains(random));
        } else if (rdTuLuan.isSelected()) {
            if(soCauTuLuanDe>=(dsCauHoiTongHop.size()-soCauTracNghiem)){
                PhuongThucChung.showMessages("Tất cả câu tự luận đã đưa vào đề thi");
                return;
            }
            do{
                random = rd.nextInt(dsCauHoiTongHop.size()-soCauTracNghiem); 
            }while(dsCauhoiTrongDe.contains(random+soCauTracNghiem));
                System.out.println(random);
        } else {
            do{
                random = rd.nextInt(dsCauHoiTongHop.size());
            }while(dsCauhoiTrongDe.contains(random));
        }
        listCauHoiMonHoc.setSelectedIndex(random);
        setTxtCauHoiMonHoc();
    }//GEN-LAST:event_btnChonNgauNhienActionPerformed

    private void btnLenTrenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLenTrenActionPerformed
        // TODO add your handling code here:
        btnXuongDuoi.setEnabled(true);
        if (listCauHoiDeThi.getModel().getSize() != 0) {
            if (listCauHoiDeThi.getSelectedIndex() < 0) {
                listCauHoiDeThi.setSelectedIndex(0);
            } else if (listCauHoiDeThi.getSelectedIndex() > 0) {
                listCauHoiDeThi.setSelectedIndex(listCauHoiDeThi.getSelectedIndex() - 1);
            } else {
                btnLenTren.setEnabled(false);
            }
        }
    }//GEN-LAST:event_btnLenTrenActionPerformed

    private void btnXuongDuoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuongDuoiActionPerformed
        // TODO add your handling code here:
        btnLenTren.setEnabled(true);
        if (listCauHoiDeThi.getModel().getSize() != 0) {
            if (listCauHoiDeThi.getSelectedIndex() < 0) {
                listCauHoiDeThi.setSelectedIndex(0);
            } else if (listCauHoiDeThi.getSelectedIndex() < listCauHoiDeThi.getModel().getSize() - 1) {
                listCauHoiDeThi.setSelectedIndex(listCauHoiDeThi.getSelectedIndex() + 1);
            } else {
                btnXuongDuoi.setEnabled(false);
            }
        }
    }//GEN-LAST:event_btnXuongDuoiActionPerformed

    private void btnXoaDeThiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaDeThiActionPerformed
        XoaDeThi xdt = new XoaDeThi();
        xdt.setVisible(true);
    }//GEN-LAST:event_btnXoaDeThiActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
         PhuongThucChung.quayVeTrangChu();
        this.dispose();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void txtPhutKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhutKeyReleased
         // TODO add your handling code here:
         setDeThi();
    }//GEN-LAST:event_txtPhutKeyReleased

    private void txtNamHocKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNamHocKeyReleased
         // TODO add your handling code here:
         setDeThi();
    }//GEN-LAST:event_txtNamHocKeyReleased

    private void rdHocKy1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdHocKy1MouseClicked
         // TODO add your handling code here:
         setDeThi();
    }//GEN-LAST:event_rdHocKy1MouseClicked

    private void rdHocKy2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdHocKy2MouseClicked
         // TODO add your handling code here:
         setDeThi();
    }//GEN-LAST:event_rdHocKy2MouseClicked

    private void rdHocKyHeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdHocKyHeMouseClicked
         // TODO add your handling code here:
         setDeThi();
    }//GEN-LAST:event_rdHocKyHeMouseClicked

    private void txtDiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiemKeyReleased
         // TODO add your handling code here:
         String diem = txtDiem.getText();
         if(!diem.isEmpty()){
             if(!PhuongThucChung.kiemTraSoThuc(diem)||Double.parseDouble(diem)<0||Double.parseDouble(diem)>10){
                PhuongThucChung.showMessages("Điểm không hợp lệ");
                txtDiem.setText("");
                txtDiem.requestFocus();
                return;
             }
         }
         
    }//GEN-LAST:event_txtDiemKeyReleased

    private void btnXaoTronCauHoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXaoTronCauHoiActionPerformed
        // TODO add your handling code here:
        int sz = dsCauHoiDeThi.size();
        CauHoi ch;
        
        if (sz == 0) {
            PhuongThucChung.showMessages("Hãy thêm các câu hỏi vào đề thi");
        } else {
            Random rd = new Random();
            int soViTriThayDoi = 0;
            if(dsCauHoiDeThi.size()>1){
                do{
                    int random = 0;
                    for (int i = 0; i < sz;) {
                        random = rd.nextInt(sz);
                            ch = dsCauHoiDeThi.get(i);
                            dsCauHoiDeThi.set(i, dsCauHoiDeThi.get(random));
                            dsCauHoiDeThi.set(random, ch);
                            
                            int temp = dsCauhoiTrongDe.get(i);
                            dsCauhoiTrongDe.set(i, dsCauhoiTrongDe.get(random));
                            dsCauhoiTrongDe.set(random, temp);
                            
                            if(random != i){
                                soViTriThayDoi++;
                            }
                            i++;
                    }
                }while(soViTriThayDoi == 0);
                dlCauHoiDeThi = new DefaultListModel<>();
                for (int i = 0; i < sz; i++) {
                    dlCauHoiDeThi.addElement((dlCauHoiDeThi.size()+1)+". "+dsCauHoiDeThi.get(i).getNoiDungCauHoi().toString());
                }
            }
            daoDapAn();
            listCauHoiDeThi.setModel(dlCauHoiDeThi);
            setDeThi();
        }
    }//GEN-LAST:event_btnXaoTronCauHoiActionPerformed

    private void btnXuatRaFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatRaFileActionPerformed
        // TODO add your handling code here:
        String noiDung = txtChiTietDeThi.getText();
        if (!noiDung.isEmpty()) {
            File file = PhuongThucChung.saveFile();
            if (file != null) {
                String action = PhuongThucChung.dinhDangFile(file);
                if (action.equals("pdf")) {
                    PhuongThucChung.ghiPdf(noiDung, file);
                } else if (action.equals("txt")) {
                    PhuongThucChung.ghiTxt(noiDung, file);
                } else {
                    PhuongThucChung.showMessages("Định dạng file không hợp lệ");
                }
            } else {
                PhuongThucChung.showMessages("Hủy lưu file");
            }
        } else {
            PhuongThucChung.showMessages("Hãy chọn câu hỏi đưa vào đề thi");
        }
    }//GEN-LAST:event_btnXuatRaFileActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        daoDapAn();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SinhDeThiBangTay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SinhDeThiBangTay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SinhDeThiBangTay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SinhDeThiBangTay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SinhDeThiBangTay().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChonNgauNhien;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnLenTren;
    private javax.swing.JButton btnLuuDeThi;
    private javax.swing.JButton btnThemCauHoi;
    private javax.swing.JButton btnXaoTronCauHoi;
    private javax.swing.JButton btnXoaDeThi;
    private javax.swing.JButton btnXuatRaFile;
    private javax.swing.JButton btnXuongDuoi;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTree jTree1;
    private javax.swing.JList<String> listCauHoiDeThi;
    private javax.swing.JList<String> listCauHoiMonHoc;
    private javax.swing.JRadioButton rdHocKy1;
    private javax.swing.JRadioButton rdHocKy2;
    private javax.swing.JRadioButton rdHocKyHe;
    private javax.swing.JRadioButton rdTatCa;
    private javax.swing.JRadioButton rdTracNghiem;
    private javax.swing.JRadioButton rdTuLuan;
    private javax.swing.JTextArea txtChiTietCauHoi;
    private javax.swing.JTextArea txtChiTietDeThi;
    private javax.swing.JTextField txtDiem;
    private javax.swing.JTextField txtNamHoc;
    private javax.swing.JTextField txtPhut;
    private javax.swing.JLabel txtTenMonHoc;
    // End of variables declaration//GEN-END:variables

    private void setDeThi() {
        CauHoi ch;
        String deThi = "Bài thi môn: " + txtTenMonHoc.getText() + "\n";
        deThi += "Kỳ: " + (rdHocKy1.isSelected() ? "1" : (rdHocKy2.isSelected() ? "2" : "Hè")) + " - Năm học:" + txtNamHoc.getText() + "\n";
        deThi += "Thời gian: " + txtPhut.getText() + " phút \n\n\n";
        String s = "";
        TuLuan tl;
        TracNghiem tn;
        for (int i = 0; i < dsCauHoiDeThi.size(); i++) {
            s = "";
            ch = dsCauHoiDeThi.get(i);
            if (ch instanceof TuLuan) {
                tl = (TuLuan) ch;
                s += "Câu " + (i + 1) + " (" + tl.getDiem() + " điểm): " + tl.getNoiDungCauHoi() + "\n";

            } else {
                tn = (TracNghiem) ch;
                s += "Câu " + (i + 1) + " (" + tn.getDiem() + " điểm): " + tn.getNoiDungCauHoi() + "\n";
                dsDapAn = new ArrayList<>();
                dsDapAn = tn.getDsDapAn();
                int j = 65;
                for (DapAn da : dsDapAn) {

                    s += (char) j + ".    " + da.getNoiDung() + "\n";
                    j++;
                }
            }
            deThi += s + "\n";
        }
        txtChiTietDeThi.setText(deThi);
    }

    private void setTxtCauHoiMonHoc() {
        if (listCauHoiMonHoc.getSelectedIndex() != -1) {

            String s = "";
            if (rdTatCa.isSelected()) {
                int i = listCauHoiMonHoc.getSelectedIndex();
                CauHoi ch = dsCauHoiTongHop.get(i);
                if (ch instanceof TuLuan) {
                    TuLuan tl = (TuLuan) ch;
//                    s = tl.inCauHoi();
                    s = "";
                    s += tl.getNoiDungCauHoi() + "\n";
                    for (int j = 0; j < tl.getNoiDungCauHoi().length(); j++) {
                        s += "=";
                    }
                    s += "\nThông tin chi tiết";
                    s += "\nGợi ý đáp án: " + tl.getGoiYDapAn();
                    s += "\nChương: " + tl.getChuong();
                    s += "\nĐộ khó: " + tl.getDoKho();
                    txtChiTietCauHoi.setText(s);

                } else {
                    TracNghiem tn = (TracNghiem) ch;
//                    s = tn.inCauHoi();
                    s = "";
                    s += tn.getNoiDungCauHoi() + "\n";
                    dsDapAn = new ArrayList<>();
                    dsDapAn = tn.getDsDapAn();
                    int j = 65;
                    for (DapAn da : dsDapAn) {

                        s += (char) j + ".    " + da.getNoiDung() + "\n";
                        j++;
                    }
                    for (int k = 0; k < tn.getNoiDungCauHoi().length(); k++) {
                        s += "=";
                    }
                    s += "\nThông tin chi tiết";
                    s += "\nChương: " + tn.getChuong();
                    s += "\nĐộ khó: " + tn.getDoKho();
                    s += "\nĐáp án đúng:";
                    s += "\n";
                    int k = 65;
                    for (DapAn da : dsDapAn) {
                        if (da.isIsTrue()) {
                            s += "    " + (char) k + ".    " + da.getNoiDung() + "\n";
                        }
                        k++;
                    }
                    txtChiTietCauHoi.setText(s);
                }
            } else if (rdTuLuan.isSelected()) {
                TuLuan tl = (TuLuan) dsCauHoiTongHop.get(listCauHoiMonHoc.getSelectedIndex()+soCauTracNghiem);
                s += tl.getNoiDungCauHoi() + "\n";
                for (int i = 0; i < tl.getNoiDungCauHoi().length(); i++) {
                    s += "=";
                }
                s += "\nThông tin chi tiết";
                s += "\nGợi ý đáp án: " + tl.getGoiYDapAn();
                s += "\nChương: " + tl.getChuong();
                s += "\nĐộ khó: " + tl.getDoKho();
                txtChiTietCauHoi.setText(s);

            } else {
                TracNghiem tn = (TracNghiem) dsCauHoiTongHop.get(listCauHoiMonHoc.getSelectedIndex());
                s += tn.getNoiDungCauHoi() + "\n";
                dsDapAn = new ArrayList<>();
                dsDapAn = tn.getDsDapAn();
                int j = 65;
                for (DapAn da : dsDapAn) {

                    s += (char) j + ".    " + da.getNoiDung() + "\n";
                    j++;
                }
                for (int i = 0; i < tn.getNoiDungCauHoi().length(); i++) {
                    s += "=";
                }
                s += "\nThông tin chi tiết";
                s += "\nChương: " + tn.getChuong();
                s += "\nĐộ khó: " + tn.getDoKho();
                s += "\nĐáp án đúng:";
                s += "\n";
                int k = 65;
                for (DapAn da : dsDapAn) {
                    if (da.isIsTrue()) {
                        s += "    " + (char) k + ".    " + da.getNoiDung() + "\n";
                    }
                    k++;
                }
                txtChiTietCauHoi.setText(s);
            }

        }
    }
    
    private void daoDapAn() {
        ArrayList<DapAn> dsDapAnTracNghiem = new ArrayList<>();
        for(int i = 0; i < dsCauHoiDeThi.size(); i++){
            dsDapAnTracNghiem = new ArrayList<>();
            CauHoi ch = dsCauHoiDeThi.get(i);
            if(ch instanceof TracNghiem){
                dsDapAnTracNghiem =  ((TracNghiem) ch).getDsDapAn();
                if(dsDapAnTracNghiem.size()>1){
                    Random rd = new Random();
                    int daDao = 0;
                    int random = 0;
                    do{
                        for(int j = 0; j<dsDapAnTracNghiem.size();j++){
                            random = rd.nextInt(dsDapAnTracNghiem.size());
                            DapAn daTemp = dsDapAnTracNghiem.get(j);
                            dsDapAnTracNghiem.set(j, dsDapAnTracNghiem.get(random));
                            dsDapAnTracNghiem.set(random, daTemp);
                            if(random != j){
                                daDao++;
                            }                                
                        }
                    }while(daDao==0); 
                }
                dsCauHoiDeThi.set(i, ch);
            }
        }
        setDeThi();
    }
}
